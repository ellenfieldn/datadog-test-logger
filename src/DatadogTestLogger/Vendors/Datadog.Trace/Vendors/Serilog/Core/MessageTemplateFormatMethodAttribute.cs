//------------------------------------------------------------------------------
// <auto-generated />
// This file was automatically generated by the UpdateVendors tool.
//------------------------------------------------------------------------------
#pragma warning disable CS0618, CS0649, CS1574, CS1580, CS1581, CS1584, CS1591, CS1573, CS8018, SYSLIB0011, SYSLIB0032
//------------------------------------------------------------------------------
// <auto-generated />
// This file was automatically generated by the UpdateVendors tool.
//------------------------------------------------------------------------------
using System;

namespace DatadogTestLogger.Vendors.Datadog.Trace.Vendors.Serilog.Core
{
    /// <summary>
    /// Indicates that the marked method logs data using a message template and (optional) arguments.
    /// The name of the parameter which contains the message template should be given in the constructor.
    /// </summary>
    /// <example>
    /// <code>
    /// [LoggerMethod("messageTemplate")]
    /// public void Information(string messageTemplate, params object[] propertyValues)
    /// {
    ///     // Do something
    /// }
    ///
    /// public void Foo()
    /// {
    ///     Information("Hello, {Name}!") // Warning: Non-existing argument in message template.
    /// }
    /// </code>
    /// </example>
    [AttributeUsage(AttributeTargets.Constructor | AttributeTargets.Method)]
    internal sealed class MessageTemplateFormatMethodAttribute : Attribute
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageTemplateFormatMethodAttribute"/> class.
        /// </summary>
        /// <param name="messageTemplateParameterName">Name of the message template parameter.</param>
        public MessageTemplateFormatMethodAttribute(string messageTemplateParameterName)
        {
            MessageTemplateParameterName = messageTemplateParameterName;
        }

        /// <summary>
        /// Gets the name of the message template parameter.
        /// </summary>
        /// <value>The name of the message template parameter.</value>
        public string MessageTemplateParameterName { get; private set; }
    }
}